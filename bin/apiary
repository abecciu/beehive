#!/bin/bash -e

progdir=$(dirname $0)
progname=$(basename $0)
grep=$(which grep)
version="0.1"

print_usage() {
cat <<EOF

Usage: $progname options [ACTION]

Manage beehive

ACTIONS
  install                       Installs beehive
  remote_install                Install on a remote machine (host option required)
  remove                        Removes beehive from the system

OPTIONS
  -t, --type                    Type of node to install on beehive [(r)outer]|(b)ee|(s)torage
  -p, --prefix                  The root directory (default: /var/lib/beehive)
  -o, --host                    Host to install (only for remote_install)
  -V, --version                 Print the version
  -k, --key                     Ssh public key to use (default: $HOME/.ssh/id_rsa.pub)
  -h, --help                    Show this screen
  
EOF
}

print_version() {
cat <<EOF
$progname $version

Copyright (C) 2009 Ari Lerner
EOF
}

# Defaults
PREFIX=""
TYPE="router"
KEY="$HOME/.ssh/id_rsa.pub"
HOST=false

# Opts
SHORTOPTS="hp:t:o:k:"
LONGOPTS="help,version,prefix,type,host,key"

if $(getopt -T >/dev/null 2>&1) ; [ $? = 4 ] ; then # New longopts getopt.
  OPTS=$(getopt -o "$SHORTOPTS" --longoptions "$LONGOPTS" -n "$progname" -- "$@")
else # Old classic getopt.
  # Special handling for --help and --version on old getopt.
  case $1 in --help) print_usage ; exit 0 ;; esac
  case $1 in --version) print_version ; exit 0 ;; esac
  OPTS=$(getopt $SHORTOPTS "$@")
fi

if [ $? -ne 0 ]; then
  echo "'$progname --help' for more information" 1>&2
  exit 1
fi

# eval set -- "$OPTS"
while [ $# -gt 0 ]; do
   : debug: $1
   case "$1" in
    --help)
      usage
      exit 0
      ;;
    -p|--prefix)
      PREFIX="$2"
      shift 2
      ;;
    -t|--type)
      case "$2" in
        r|router )
          TYPE="router";;
        b|bee )
          TYPE="bee";;
        s|storage )
          TYPE="storage";;
        *)
          echo "
ERROR! Unknown type of node. Must be one of the following
(r)router
(b)ee
(s)storage
          "
          exit 1
          ;;
      esac
      shift 2
      ;;
    -o|--host)
      HOST=$2
      shift 2
      ;;
    -k|--key)
      KEY=$2
      shift 2
      ;;
    --)
      shift
      break;;
    install)
      ACTION="install"
      shift 1
      ;;
    upgrade)
      ACTION="upgrade"
      shift 1
      ;;
    remote_install)
      ACTION="remote_install"
      shift 1
      ;;
    remote_upgrade)
      ACTION="remote_upgrade"
      shift 1
      ;;
    remove)
      ACTION="remove"
      shift 1
      ;;
    *)
      print_usage; exit 0
      ;;
  esac
done

SRC_DIR="/tmp/beehive"
SETUP_SCRIPTS_DIR="$progdir/../config/user-data"
BH_SRC_DIR="$progdir/../lib/*"
WHOAMI=$(whoami)
RSYNC=$(which rsync)
SSH=$(which ssh)
SCP=$(which ssh)

if [ -n "$(which erl)" ]; then
  LIBDIR=$(erl -eval 'io:format("~s~n", [code:lib_dir()])' -s init stop -noshell)
fi
VERSION=$(cat $BEEHIVE_HOME/VERSION | tr -d '\n')
APP=beehive

case $ACTION in
  "install" )
    if [ "$WHOAMI" != "root" ]; then
      echo "
      Error! You must be root to install beehive.
      "
      exit 1
    fi
    echo "Installing beehive ($TYPE) into $PREFIX"
    # Beehive specific stuff
    # Add a beehive user
    /usr/bin/env -i PREFIX=$PREFIX /bin/bash $SETUP_SCRIPTS_DIR/$TYPE.sh
    ;;
  "upgrade" )
      mkdir -p $SRC_DIR
      cp -R $BH_SRC_DIR $SRC_DIR
      cd $SRC_DIR/erlang && sudo make clean && sudo make
    ;;
  "remote_install" )
    if [ $HOST != false ]; then
      echo "Installing on $HOST"
      
      if [ -f $KEY ]; then
        scp $KEY $HOST:/tmp/id_rsa.pub
      else
        echo "Create an id_rsa.pub in $HOME/.ssh/id_rsa.pub or speficy a key with --key"
        exit 2
      fi
      $RSYNC -a --exclude=".git" $progdir/../ $HOST:/tmp/beehive
      $SSH $HOST "cd /tmp/beehive && sudo ./bin/apiary install -t $TYPE"
    else
      echo "
You must pass a host when installing on a remote machine"
      print_usage
      exit 1
    fi
    ;;
  "remote_upgrade" )
      $RSYNC -va --exclude=".git" $progdir/../ $HOST:~/bh
      $SSH $HOST "cd ~/bh && sudo ./bin/apiary upgrade -t $TYPE; rm -rf ~/bh"
    ;;
  "remove" )
    if [ "$WHOAMI" != "root" ]; then
      echo "
      Error! You must be root to install beehive.
      "
      exit 1
    fi
    echo "Removing beehive from $PREFIX"
    rm -rf $SRC_DIR
    ;;
  *)
    echo "Unknown action"
esac

export PATH=$PATH:/
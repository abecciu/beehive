#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.

# Initialization
AC_PREREQ([2.00])
AC_INIT(babysitter, 0.1)
# AM_INIT_AUTOMAKE([-Wall -Werror foreign])
AC_CONFIG_SRCDIR([c_src/bin/daemon.c])

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
# AC_PATH_PROG(ERL, erl)
# AC_PATH_PROG(ERLC, erlc)

# Erlang stuff
m4_define([AC_LANG(Erlang)],
[ac_ext=erl
 ac_compile='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&AS_MESSAGE_LOG_FD'
 ac_link='$ERLC $ERLCFLAGS -b beam conftest.$ac_ext >&AS_MESSAGE_LOG_FD; echo "#!/bin/sh" > conftest$ac_exeext; echo "\"$ERL\" -s conftest -s init stop -noshell" >> conftest$ac_exeext; chmod +x conftest$ac_exeext'
])
 
AC_ERLANG_SUBST_ROOT_DIR
AC_ERLANG_SUBST_INSTALL_LIB_DIR(@PROGRAM_NAME@, @PROGRAM_VERSION@)
AC_ERLANG_NEED_ERLC
AC_ERLANG_CHECK_LIB([stdlib], [
                     echo "erlang standard library version installed: \"$ERLANG_LIB_VER_stdlib\""
                    ], [AC_MSG_FAILURE(cannot find erlang stdlib, [1])])
AC_ERLANG_CHECK_LIB([erl_interface],
                    [echo "erl_interface version found: \"$ERLANG_LIB_DIR_erl_interface\"",
                     echo "erl_interface is installed at \"$ERLANG_LIB_DIR_erl_interface/include\"",
                    ], [AC_MSG_FAILURE(cannot find erl_interface, [1])])

ERLDIR=`awk -F= '/ROOTDIR=/ { print [$]2; exit; }' $ERL`
AC_SUBST(ERL)
AC_SUBST(ERLC)
AC_SUBST(ERLBINDIR)
AC_SUBST(ERLDIR)

ERL_INTERFACE=`ls ${ERLDIR}/lib | grep erl_interface | tail -n 1`
ERL_ROOT_INC=${ERLDIR}/usr/include

CFLAGS="-O2 -g3 -I ${ERLDIR}/lib/${ERL_INTERFACE}/include -I ${ERL_ROOT_INC} -fPIC"
CPPFLAGS="${CFLAGS}"

EI_LIB_DIR="${ERLDIR}/lib/${ERL_INTERFACE}/lib"
LIBEI="${EI_LIB_DIR}/libei.a"
AC_SUBST(LIBEI)

LDFLAGS_COMMON="-L${EI_LIB_DIR} -fno-common -Wall"
AC_SUBST(LDFLAGS_COMMON)

AC_CHECK_LIB(stdc++, main,,AC_MSG_ERROR(gdu requires libstdc++))

# AC_CHECK_LIB([elf],main,,AC_MSG_ERROR([
# Required library libelf is missing. 
# Make sure sure this is available
# ]))

# Custom proggies
# AC_MSG_CHECKING(libcap)
# AC_CHECK_LIB(cap,main,,AC_MSG_ERROR([babysitter requires libcap. Make sure this is installed before proceeding], [1]))

# AC_MSG_CHECKING(libelf)
# AC_ARG_WITH(libelf,
#     [	--with-libelf=<path> prefix of the LibElf installation. e.g. /usr/local or /usr],
#     [ELF_PREFIX=$with_libelf],
# 		[ELF_PREFIX=/usr/local])

AC_SUBST(ELF_PREFIX)
ELF_LIBS="-L${ELF_PREFIX}/lib -lelf"
ELF_CFLAGS="-I${ELF_PREFIX}/include"
AC_SUBST(ELF_CFLAGS)
AC_SUBST(ELF_LIBS)

# Checks for libraries.
AC_HEADER_STDC

# Checks for header files.
AC_CHECK_HEADER([ei.h],,[dnl
	AC_MSG_ERROR([You need the ei.h header])])

AC_CHECK_HEADERS([sys/capability.h])
AC_CHECK_HEADERS([fcntl.h limits.h string.h sys/time.h unistd.h])
AC_CHECK_HEADERS([sys/param.h])
AC_CHECK_HEADERS(sys/resource.h)

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_TYPE_INT32_T
AC_TYPE_INT64_T
AC_TYPE_SIZE_T
AC_TYPE_UINT32_T
AC_TYPE_UINT64_T

# Checks for library functions.
# AC_FUNC_MALLOC
# AC_FUNC_REALLOC
AC_FUNC_CHOWN
AC_FUNC_FORK
AC_TYPE_MODE_T
AC_TYPE_PID_T
AC_TYPE_UID_T
AC_CHECK_FUNCS([gettimeofday memset alarm atexit mkdir regcomp select strchr strdup strerror sigtimedwait])
AC_CHECK_FUNCS([setresgid getresgid])

AC_OUTPUT([c_src/Makefile erl/Makefile Makefile])
